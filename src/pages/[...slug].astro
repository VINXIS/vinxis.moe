---
import type { GetStaticPaths } from "astro";
import { getCollection } from "astro:content";
import Default from "../layouts/Default.astro";

export const getStaticPaths = (async () => {
    const blog = await getCollection("blog");
    const notes = await getCollection("notes");
    const posts = await getCollection("posts");

    const pages = [...blog, ...notes, ...posts];

    return pages.map(page => {
        let backlinks: { slug: string, name: string }[] = [];
        if (page.collection === "notes") {
            pages.forEach(targetPage => {
                targetPage.body.replace(/\[\[([^|\]#]+)(?:#[^\]]*)?(?:\|([^\]]+))?\]\]/g, (_, link) => {
                    const slug = link.replace(/ /g, "-").toLowerCase();
                    if (slug === page.slug)
                        backlinks.push({
                            slug: `/${targetPage.collection}/${targetPage.slug}`,
                            name: `${targetPage.collection.charAt(0).toUpperCase() + targetPage.collection.slice(1)} - ${"title" in targetPage.data && targetPage.data.title ? targetPage.data.title : targetPage.id.replace(/\.[^/\\.]*$/, "")}`,
                        });
                    return _;
                });
            });
            backlinks = backlinks.filter((backlink, index, self) => self.findIndex(t => t.slug === backlink.slug) === index);
        }

        return {
            params: {
                slug: `/${page.collection}/${page.slug}`,
            },
            props: {
                title: `${page.collection} - ${"title" in page.data && page.data.title ? page.data.title : page.id.replace(/\.[^/\\.]*$/, "")}`,
                page,
                backlinks,
            },
        };
    });
}) satisfies GetStaticPaths;

const { page, title, backlinks } = Astro.props;

const { Content } = await page.render();
const description = page.body.slice(0, 99) + "â€¦";

const meta = {
    title, 
    description,
    ogTitle: title,
    ogDescription: description,
    ogType: "website",
    ogUrl: "https://vinxis.moe",
    ogSiteName: title,
    ogLocale: "en_US",
    ogImage: "https://vinxis.moe/metaImage.png",
    twitterCard: "summary_large_image",
    twitterTitle: title,
    twitterDescription: description,
    twitterImage: "https://vinxis.moe/metaImage.png",
};
---
<link href="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.css" rel="stylesheet">
<Default meta={meta}>
    <div class="page post-page">
        <h1>{title}</h1>
        <Content />
        <br>
        <br>
        { 
            backlinks.length > 0 &&
            <div class="backlinks">
                <h2>Pages referencing this page:</h2>
                <ul>
                    {backlinks.map(backlink => (
                        <li>
                            <a href={backlink.slug}>{backlink.name}</a>
                        </li>
                    ))}
                </ul>
            </div>
        }
    </div>
</Default>

<style>
    .post-page h1 {
        text-transform: capitalize;
    }
</style>